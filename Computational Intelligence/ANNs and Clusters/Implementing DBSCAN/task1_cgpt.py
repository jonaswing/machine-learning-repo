import numpy as np
from sklearn.datasets import make_blobs
from sklearn.model_selection import train_test_split
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Step 1: Generate artificial blob-based data set
n_samples = 1000
n_features = 8
n_centers = 5
random_state = 42

X, _ = make_blobs(n_samples=n_samples, n_features=n_features, centers=n_centers, random_state=random_state)

# Step 2: Split the data set into training and test data sets
X_train, X_test = train_test_split(X, test_size=0.2, random_state=random_state)

# Step 3: Train a k-means clustering algorithm on the training data
kmeans = KMeans(n_clusters=2, random_state=random_state)
kmeans.fit(X_train)

# Step 4: Combine the labels generated by the clustering algorithm with the training data
train_labels = kmeans.labels_
X_train_labeled = np.column_stack((X_train, train_labels))

# Visualize the clusters
plt.figure(figsize=(8, 6))
plt.scatter(X_train[:, 0], X_train[:, 1], c=train_labels, cmap='viridis', s=50, alpha=0.5)
centers = kmeans.cluster_centers_
plt.scatter(centers[:, 0], centers[:, 1], c='red', s=200, alpha=0.75)
plt.title('K-means Clustering with 2 clusters')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.show()

